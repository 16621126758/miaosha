spring.datasource.url=jdbc:mysql://localhost:3306/miaosha?serverTimezone=GMT%2B8
#?serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=root
#spring.datasource.driverClssName=com.mysql.jdbc.Driver
spring.datasource.driverClssName=com.mysql.cj.jdbc.Driver
spring.datasource.max-idle=100
spring.datasource.max-active=1000
spring.datasource.min-idle=500
spring.datasource.initial-size=100






#thymeleaf
#是否开启缓存
spring.thymeleaf.cache=false
#检查
spring.thymeleaf.servlet.content-type=text/html
#是否启用
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML5
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html


mybatis.mapper-locations = classpath:mapper/*Mapper.xml
mybatis.type-aliases-package=com.hand.miaosha.domain


# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1000ms
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=3
# 连接超时时间（毫秒）
spring.redis.timeout=2000ms


# Redis服务器地址
redis.host= 127.1.1.1
# Redis服务器连接端口
redis.port=6379
# Redis服务器连接密码（默认为空）  如果redis没有密码，你获取这个配置就会报错
redis.password=123456
# 连接池最大连接数（使用负值表示没有限制）
redis.poolMaxTotal=500
# 连接池最大阻塞等待时间（使用负值表示没有限制）
redis.poolMaxWait=100
# 连接超时时间（毫秒）
redis.timeout=1000
# 连接池中的最大空闲连接
redis.poolMaxIdle=100


#static
#是否开启默认的资源处理，默认为true
spring.resources.add-mappings=true
#设定资源的缓存时效，以秒为单位.
spring.resources.cache.period= 3600S
#spring.resources.cache-period= 3600
spring.resources.chain.cache=true 
#是否开启资源 handling chain，默认为false
spring.resources.chain.enabled=true
#spring.resources.chain.gzipped=true
#是否开启h5应用的cache manifest重写，默认为: false
spring.resources.chain.html-application-cache=true
spring.resources.static-locations=classpath:/static/


#RabbitMQ
#rabbitmq
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/
#\u6D88\u8D39\u8005\u6570\u91CF
spring.rabbitmq.listener.simple.concurrency= 10
spring.rabbitmq.listener.simple.max-concurrency= 10
#\u6D88\u8D39\u8005\u6BCF\u6B21\u4ECE\u961F\u5217\u83B7\u53D6\u7684\u6D88\u606F\u6570\u91CF   从队列里面每次取几个
spring.rabbitmq.listener.simple.prefetch= 1
#\u6D88\u8D39\u8005\u81EA\u52A8\u542F\u52A8    消费者自动启动
spring.rabbitmq.listener.simple.auto-startup=true
#\u6D88\u8D39\u5931\u8D25\uFF0C\u81EA\u52A8\u91CD\u65B0\u5165\u961F   消费之消费失败之后会重新压入到队列中
spring.rabbitmq.listener.simple.default-requeue-rejected= true
#\u542F\u7528\u53D1\u9001\u91CD\u8BD5 下面配置的是发送者
spring.rabbitmq.template.retry.enabled=true 
#1s之后尝试一次
spring.rabbitmq.template.retry.initial-interval=1000ms
#重试最大三次
spring.rabbitmq.template.retry.max-attempts=3
#最大间隔10s
spring.rabbitmq.template.retry.max-interval=10000ms
spring.rabbitmq.template.retry.multiplier=1.0

